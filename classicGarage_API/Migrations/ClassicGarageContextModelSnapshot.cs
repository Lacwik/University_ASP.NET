// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using classicGarage_API.Models;

namespace classicGarage_API.Migrations
{
    [DbContext(typeof(ClassicGarageContext))]
    partial class ClassicGarageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("classicGarage_API.Models.Ad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("Car_id");

                    b.Property<int>("Owner_Id");

                    b.HasKey("Id");

                    b.HasIndex("Owner_Id");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("classicGarage_API.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bought_date");

                    b.Property<int>("Bought_price");

                    b.Property<string>("Brand");

                    b.Property<string>("Model");

                    b.Property<int>("Owner_Id");

                    b.Property<string>("Photo");

                    b.Property<string>("Sell_date");

                    b.Property<int>("Sell_price");

                    b.Property<int>("Series");

                    b.Property<int>("Vin");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("Owner_Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("classicGarage_API.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.Property<int>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("classicGarage_API.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bought_date");

                    b.Property<int>("Bought_price");

                    b.Property<int>("Car_Id");

                    b.Property<int>("Catalog_number");

                    b.Property<string>("Name");

                    b.Property<string>("Sell_date");

                    b.Property<int>("Sell_price");

                    b.HasKey("Id");

                    b.HasIndex("Car_Id");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("classicGarage_API.Models.Repair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Car_Id");

                    b.Property<int>("Cost");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("Car_Id");

                    b.ToTable("Repairs");
                });

            modelBuilder.Entity("classicGarage_API.Models.Ad", b =>
                {
                    b.HasOne("classicGarage_API.Models.Owner", "Owner")
                        .WithMany("Ads")
                        .HasForeignKey("Owner_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("classicGarage_API.Models.Car", b =>
                {
                    b.HasOne("classicGarage_API.Models.Owner", "Owner")
                        .WithMany("Cars")
                        .HasForeignKey("Owner_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("classicGarage_API.Models.Part", b =>
                {
                    b.HasOne("classicGarage_API.Models.Car", "Car")
                        .WithMany("Parts")
                        .HasForeignKey("Car_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("classicGarage_API.Models.Repair", b =>
                {
                    b.HasOne("classicGarage_API.Models.Car", "Car")
                        .WithMany("Repairs")
                        .HasForeignKey("Car_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
